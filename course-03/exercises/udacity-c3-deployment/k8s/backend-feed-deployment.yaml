# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   creationTimestamp: null
#   labels:
#     service: backend-feed
#   name: backend-feed
# spec:
#   progressDeadlineSeconds: 2147483647
#   replicas: 2
#   revisionHistoryLimit: 2147483647
#   selector:
#     matchLabels:
#       service: backend-feed
#   strategy:
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#     type: RollingUpdate
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         service: backend-feed
#     spec:
#       containers:
#       - env:
#         - name: URL
#           valueFrom:
#             configMapKeyRef:
#               key: URL
#               name: env-config
#         - name: AWS_MEDIA_BUCKET
#           valueFrom:
#             configMapKeyRef:
#               key: AWS_MEDIA_BUCKET
#               name: env-config
#         - name: AWS_PROFILE
#           valueFrom:
#             configMapKeyRef:
#               key: AWS_PROFILE
#               name: env-config
#         - name: AWS_REGION
#           valueFrom:
#             configMapKeyRef:
#               key: AWS_REGION
#               name: env-config
#         - name: JWT_SECRET
#           valueFrom:
#             configMapKeyRef:
#               key: JWT_SECRET
#               name: env-config
#         - name: POSTGRESS_DATABASE
#           valueFrom:
#             configMapKeyRef:
#               key: POSTGRESS_DATABASE
#               name: env-config
#         - name: POSTGRESS_HOST
#           valueFrom:
#             configMapKeyRef:
#               key: POSTGRESS_HOST
#               name: env-config
#         - name: POSTGRESS_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               key: POSTGRESS_PASSWORD
#               name: env-secret
#         - name: POSTGRESS_USERNAME
#           valueFrom:
#             secretKeyRef:
#               key: POSTGRESS_USERNAME
#               name: env-secret
#         image: lasz/udacity-restapi-feed
#         imagePullPolicy: Always
#         name: backend-feed
#         resources:
#           limits:
#             cpu: 500m
#             memory: 1Gi
#           requests:
#             cpu: 250m
#             memory: 64Mi
#         terminationMessagePath: /dev/termination-log
#         terminationMessagePolicy: File
#         readinessProbe:
#           httpGet:
#              path: /
#              port: 8080
#              initialDelaySeconds: 5
#              periodSeconds: 5
#              successThreshold: 1
#         volumeMounts:
#         - mountPath: /root/.aws/
#           name: aws-secret
#           readOnly: true
#       dnsPolicy: ClusterFirst
#       restartPolicy: Always
#       schedulerName: default-scheduler
#       securityContext: {}
#       terminationGracePeriodSeconds: 30
#       volumes:
#       - name: aws-secret
#         secret:
#           defaultMode: 420
#           secretName: aws-secret

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: backend-feed
  name: backend-feed
spec:
  selector:
    matchLabels:
      service: backend-feed
  replicas: 1
  template:
    metadata:
      labels:
        service: backend-feed
    spec:
      containers:
      - image: lasz/udacity-restapi-feed:v0.1.0
        name: backend-feed
        imagePullPolicy: Always  
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"                  
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_MEDIA_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_MEDIA_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRESS_DATABASE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_DATABASE
        - name: POSTGRESS_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_HOST
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_PASSWORD
        - name: POSTGRESS_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_USERNAME      
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret       